USE Northwind
GO

-- 1.a
-- Написать процедуру, которая возвращает самый крупный заказ для каждого из продавцов за определенный год. В результатах
-- не может быть несколько заказов одного продавца, должен быть только один и самый крупный. В результатах запроса должны
-- быть выведены следующие колонки: колонка с именем и фамилией продавца (FirstName и LastName – пример: Nancy Davolio),
-- номер заказа и его стоимость. В запросе надо учитывать Discount при продаже товаров. Процедуре передается год, за который
-- надо сделать отчет, и количество возвращаемых записей. Результаты запроса должны быть упорядочены по убыванию суммы
-- заказа. Процедура должна быть реализована 2-мя способами: с использованием оператора SELECT и с использованием
-- курсора. Название функций соответственно GreatestOrders и GreatestOrdersCur. Необходимо продемонстрировать
-- использование этих процедур.

EXEC dbo.GreatestOrders 1998, 5
GO
EXEC dbo.GreatestOrdersCur 1998, 5
GO



-- 1.b
-- Написать процедуру, которая возвращает заказы в таблице Orders, согласно указанному сроку доставки в днях (разница между
-- OrderDate и ShippedDate). В результатах должны быть возвращены заказы, срок которых превышает переданное значение, или
-- еще недоставленные заказы. Значению по умолчанию для передаваемого срока 35 дней. Название процедуры
-- ShippedOrdersDiff. Процедура должна высвечивать следующие колонки: OrderID, OrderDate, ShippedDate, ShippedDelay
-- (разность в днях между ShippedDate и OrderDate), SpecifiedDelay (переданное в процедуру значение). Необходимо
-- продемонстрировать использование этой процедуры.

EXEC dbo.ShippedOrdersDiff 35
GO



-- 1.c
-- Написать процедуру, которая высвечивает всех подчиненных заданного продавца, как непосредственных, так и подчиненных
-- его подчиненных. В качестве входного параметра функции используется EmployeeID. Необходимо распечатать имена
-- подчиненных и выровнять их в тексте (использовать оператор PRINT) согласно иерархии подчинения. Продавец, для которого
-- надо найти подчиненных, также должен быть высвечен. Название процедуры SubordinationInfo. В качестве алгоритма для
-- решения этой задачи надо использовать пример, приведенный в Books Online и рекомендованный Microsoft для решения
-- подобного типа задач. Продемонстрировать использование процедуры.
-- Recursive Queries Using Common Table Expressions (!!!)
-- https://technet.microsoft.com/en-us/library/ms186243(v=sql.105).aspx
-- WITH common_table_expression (!!!)
-- https://technet.microsoft.com/en-us/library/ms175972(v=sql.105).aspx

EXEC dbo.SubordinationInfo 2
GO



-- 1.d
-- Написать функцию, которая определяет, есть ли у продавца подчиненные. Возвращает тип данных BIT. В качестве входного
-- параметра функции используется EmployeeID. Название функции IsBoss. Продемонстрировать использование функции для
-- всех продавцов из таблицы Employees.

SELECT
	CONCAT(FirstName, ' ', LastName) AS Employee,
	CASE
		WHEN dbo.IsBoss(EmployeeID) = 1 THEN 'Yes'
		ELSE 'No'
	END AS IsBoss
FROM
	Employees
GO
